<!-- file:m-t1sub1sub1.ejs
     작성:20200303 james
     설명:
     T1 sub1 sub1 메뉴 화면.
     바탕은 layout.ejs 이고
     <main>태그 부분만 작성하면 된다-->

<div style="position:relative">
  <div style="width:850px;">
    <div id="myGrid" style="width:100%;height:500px;"></div>
  </div>

  <div class="options-panel">
    <h2>Demonstrates:</h2>
    <ul>
      <li>adding basic keyboard navigation and editing</li>
      <li>custom editors and validators</li>
      <li>auto-edit settings</li>
    </ul>

    <h2>Options:</h2>
    <button onclick="grid.setOptions({autoEdit:true})">Auto-edit ON</button>
    &nbsp;
    <button onclick="grid.setOptions({autoEdit:false})">Auto-edit OFF</button>
    <h2>View Source:</h2>
    <ul>
      <li>
        <A
          href="https://github.com/saeamus/zeror-p1/tree/master/node-project/testNode/views/m-t1sub1sub3.ejs"
          target="_sourcewindow"
        >
          View the source for this example on Github</A
        >
      </li>
    </ul>
  </div>
</div>

<script src="/lib/firebugx.js"></script>

<script src="/lib/jquery-1.12.4.min.js"></script>
<script src="/lib/jquery-ui.min.js"></script>
<script src="/lib/jquery.event.drag-2.3.0.js"></script>

<script src="/javascripts/slick.core.js"></script>
<script src="/plugins/slick.cellrangedecorator.js"></script>
<script src="/plugins/slick.cellrangeselector.js"></script>
<script src="/plugins/slick.cellselectionmodel.js"></script>
<script src="/javascripts/slick.formatters.js"></script>
<script src="/javascripts/slick.editors.js"></script>
<script src="/javascripts/slick.grid.js"></script>

<script>
  function requiredFieldValidator(value) {
    if (value == null || value == undefined || !value.length) {
      return { valid: false, msg: "This is a required field" };
    } else {
      return { valid: true, msg: null };
    }
  }

  var grid;
  var data = [];
  var columns = [
    {
      id: "id",
      name: "ID",
      field: "id",
      width: 20,
      cssClass: "cell-title",
      editor: Slick.Editors.Text,
      validator: requiredFieldValidator
    },
    { id: "name", name: "Name", field: "name", editor: Slick.Editors.Text },
    { id: "location", name: "Location", field: "location", editor: Slick.Editors.Text },
    { id: "occupation", name: "Occupation", field: "occupation", editor: Slick.Editors.Text },
    { id: "hobby1", name: "Hobby1", field: "hobby1", editor: Slick.Editors.Text },
    { id: "hobby2", name: "Hobby2", field: "hobby2", editor: Slick.Editors.Text },
    { id: "address", name: "Address", field: "address", width: 100, editor: Slick.Editors.LongText },
    { id: "phone", name: "Phone", field: "phone", editor: Slick.Editors.Text },
    // {
    //   id: "%",
    //   name: "% Complete",
    //   field: "percentComplete",
    //   width: 80,
    //   resizable: false,
    //   formatter: Slick.Formatters.PercentCompleteBar,
    //   editor: Slick.Editors.PercentComplete
    // },
    { id: "reg_date", name: "등록일", field: "reg_date", minWidth: 60, editor: Slick.Editors.Date },
    { id: "upd_date", name: "수정일", field: "upd_date", minWidth: 60, editor: Slick.Editors.Date },
    {
      id: "check",
      name: "Check",
      width: 80,
      minWidth: 20,
      maxWidth: 80,
      cssClass: "cell-effort-driven",
      field: "check",
      formatter: Slick.Formatters.Checkmark,
      editor: Slick.Editors.Checkbox
    }
  ];
  var options = {
    editable: true,
    enableAddRow: true,
    enableCellNavigation: true,
    asyncEditorLoading: false,
    autoEdit: false
  };

  $(function() {
    var griddata = [];

    //Ajax GET Method로 db temp_table에서 data read
    $.ajax({
      url: "/modules/t1sub1sub3/get", // modules/t1sub1sub3/get으로 라우팅
      async: false, // async:true이면 javascript 특성상 db에서 data를 가져오기 전에 grid를 그려버린다.그러면 data로딩 안됨.
      dataType: "json",
      type: "GET",
      //data: { data: get },
      success: function(result) {
        if (result) {
          //console.log(result);
          //console.log(result.length);
          //console.log(result[0].name);
          for (var i = 0; i < result.length; i++) {
            griddata[i] = {
              id: result[i].id,
              name: result[i].name,
              location: result[i].location,
              occupation: result[i].occupation,
              hobby1: result[i].hobby1,
              hobby2: result[i].hobby2,
              address: result[i].address,
              phone: result[i].phone,
              check: result[i].check,
              reg_date: result[i].reg_date,
              upd_date: result[i].upd_date
              //column의 field명에 매칭시킨다.
            };
          }
          //console.log(griddata[2].name);
        }
      }
    });

    grid = new Slick.Grid("#myGrid", griddata, columns, options);

    grid.setSelectionModel(new Slick.CellSelectionModel());

    grid.onAddNewRow.subscribe(function(e, args) {
      var item = args.item;
      grid.invalidateRow(data.length);
      data.push(item);
      grid.updateRowCount();
      grid.render();
    });
  });
</script>
